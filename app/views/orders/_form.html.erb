<%= form_for(@order, html: { autocomplete: 'off' }, data: { disabled: read_only }) do |form| %>
  <div class="bg-dark p-4 mt-4">
    <div class="page-header text-primary">
      <h4>
        <%= @order.new_record? ? "Criar Pedido" : "Atualizar Pedido" %>
        <small class="text-secondary"> Informações do pedido</small>
      </h4>
    </div>
    <h4 style="float:right;">Total do Pedido: <span class="badge bg-primary">R$ <span id="total_order"></span></span></h4>
    <div class="row mb-3 justify-content-center">
      <div class="col-6 d-flex">
        <div class="flex-grow-1">
          <%= form.label :contact_id, 'Cliente:' %>
          <%= form.select :contact_id,
                options_for_select(@contacts.map { |t| ["#{t.nome} - CPF/CNPJ:#{t.cpf_cnpj}", t.id] }, form.object.contact_id),
                {},
                class: 'form-control select2', id: 'contact_select' %>
          <div class="form-check mt-2">
            <%= form.check_box :use_contact_order, class: 'form-check-input', id: 'use_contact_order' %>
            <%= form.label :use_contact_order, 'Usar endereço do contato', class: 'form-check-label text-secondary' %>
          </div>

          <div class="ml-2 align-self-end">
            <a href="#" id="edit_contact_link" class="btn btn-secondary" target="_blank" style="display: none;">
              <i class="fa fa-edit"></i> Editar
            </a>
          </div>
        </div>
      </div>
    </div>

    <div class="container" id="div_contact" style="display: none;">
      <div class="row d-flex justify-content-center">
        <div class="col-md-12">
          <div class="page-header text-primary">
            <h4>
              <small class="text-secondary"> Endereço de entrega</small>
            </h4>
          </div>
        </div>
      </div>
      <div class="row mb-3 d-flex justify-content-center">
        <div class="col-md-4">
          <%= form.label :endereco, 'Endereço', class: 'col-form-label text-secondary' %>
          <%= form.text_field :endereco, class: 'form-control form-control-lg' %>
        </div>
        <div class="col-md-4">
          <%= form.label :numero, 'Número', class: 'col-form-label text-secondary' %>
          <%= form.text_field :numero, class: 'form-control form-control-lg' %>
        </div>
        <div class="col-md-4">
          <%= form.label :complemento, 'Complemento', class: 'col-form-label text-secondary' %>
          <%= form.text_field :complemento, class: 'form-control form-control-lg' %>
        </div>
      </div>
      <div class="row mb-3 d-flex justify-content-center">
        <div class="col-md-4">
          <%= form.label :bairro, 'Bairro', class: 'col-form-label text-secondary' %>
          <%= form.text_field :bairro, class: 'form-control form-control-lg' %>
        </div>
        <div class="col-md-4">
          <%= form.label :cep, 'CEP', class: 'col-form-label text-secondary' %>
          <%= form.text_field :cep, class: 'form-control form-control-lg' %>
        </div>
        <div class="col-md-4">
          <%= form.label :uf, 'UF', class: 'col-form-label text-secondary' %>
          <%= form.text_field :uf, class: 'form-control form-control-lg' %>
        </div>
      </div>
    </div>

    <div class="page-header text-primary mt-4">
      <h4>
        <small class="text-secondary"> Itens do pedido</small>
      </h4>
    </div>

    <div id="order_products">
      <%= form.fields_for :order_products do |pi| %>
        <%= render 'order_product_fields', f: pi %>
      <% end %>
      <% if params[:action] != 'show' %>
        <div class="links">
          <%= link_to_add_association form, :order_products, class: 'btn btn-primary' do %>
            <i class="fa fa-plus"></i> Adicionar produto
          <% end %>
        </div>
      <% end %>
    </div>

    <div class="page-header text-primary mt-4">
      <h4>
        <small class="text-secondary"> Parcelas do pedido</small>
      </h4>
    </div>

    <div class="row">
      <div class="col-6">
        <%= label_tag 'payment_installments', 'Valores das Parcelas (separados por vírgula)' %>
        <%= text_field_tag 'payment_installments', '', class: 'form-control', placeholder: 'Ex: 10,25,35', id: 'payment_installments' %>
      </div>
    </div>

    <div id="order_payments">
      <%= form.fields_for :order_payments do |pi| %>
        <%= render 'order_payment_fields', f: pi %>
      <% end %>
      <% if params[:action] != 'show' %>
        <div class="links">
          <%= link_to_add_association form, :order_payments, class: 'btn btn-primary', id:'add_order_payment' do %>
            <i class="fa fa-plus"></i> Adicionar parcela
          <% end %>
        </div>
      <% end %>
    </div>

    <div class="panel-buttons bg-secondary">
      <%= link_to orders_path, class: 'btn btn-dark btn-lg' do %>
        <i class="fa fa-undo"></i> Voltar
      <% end %>
      <% unless read_only %>
        <%= form.button class: 'btn btn-primary btn-lg', data: { disable_with: @order.new_record? ? 'Criando...' : 'Salvando...' } do %>
          <i class="fa fa-save"></i> <%= @order.new_record? ? 'Criar Pedido' : 'Atualizar Pedido' %>
        <% end %>
      <% end %>
    </div>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function () {

    const contactCheckbox = document.getElementById('use_contact_order');
    const contactDiv = document.getElementById('div_contact');

    function toggleContactDiv() {
      if (contactCheckbox.checked) {
        contactDiv.style.display = 'none';
      } else {
        contactDiv.style.display = 'block';
      }
    }

    contactCheckbox.addEventListener('change', toggleContactDiv);

    toggleContactDiv();
  });

  $('#order_products').on('cocoon:after-insert', function(e, added_task) {
    $("select.select2").select2({
      language: "pt-BR",
      placeholder: " ",
      width: '100%',
      allowClear: true      
    });
  });

  $('#order_payments').on('cocoon:after-insert', function(e, added_task) {
    $("select.select2").select2({
      language: "pt-BR",
      placeholder: " ",
      width: '100%',
      allowClear: true      
    });
  });

  document.addEventListener('DOMContentLoaded', function () {
    const contactSelect = document.getElementById('contact_select');
    const editContactLink = document.getElementById('edit_contact_link');

    function updateEditLink() {
      const selectedContactId = contactSelect.value;
      if (selectedContactId) {
        editContactLink.href = `/contacts/${selectedContactId}/edit`;
        editContactLink.style.display = 'inline-block';
      } else {
        editContactLink.style.display = 'none';
      }
    }

    if (contactSelect.classList.contains('select2')) {
      $(contactSelect).on('select2:select', updateEditLink);
    } else {
      contactSelect.addEventListener('change', updateEditLink);
    }

    updateEditLink();
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const paymentInstallmentsField = document.getElementById('payment_installments');
    const orderPaymentsContainer = document.getElementById('order_payments');
    const totalOrderField = document.getElementById('total_order'); // Campo do total do pedido

    function updateOrderPayments() {
      const values = paymentInstallmentsField.value.split(',').map(value => parseInt(value.trim())).filter(value => !isNaN(value));
      const totalOrder = parseFloat(totalOrderField.textContent.replace('R$', '').trim()); // Obtém o valor total como número

      // Remove os campos de pagamento existentes
      const currentFields = orderPaymentsContainer.querySelectorAll('.nested-fields');
      currentFields.forEach(field => field.remove());

      values.forEach((days, index) => {
        const newField = document.createElement('div');
        newField.classList.add('nested-fields');

        // Calcula a data para cada parcela
        const installmentDate = new Date();
        installmentDate.setDate(installmentDate.getDate() + days);
        const formattedDate = installmentDate.toISOString().split('T')[0];

        // Calcula o valor de cada parcela
        const installmentAmount = (totalOrder / values.length).toFixed(2); // Valor dividido por número de parcelas

        newField.innerHTML = `
          <div class="row">
            <div class="col-3">
              <label for="order_payment_type_id">Tipo de Pagamento</label>
              <select class="form-control select2" name="order[order_payments_attributes][${index}][order_payment_type_id]">
                <!-- opções de pagamento -->
                ${getPaymentTypesOptions()}
              </select>
            </div>
            <div class="col-2">
              <label for="amount">Valor (R$)</label>
              <input type="text" name="order[order_payments_attributes][${index}][amount]" class="form-control" value="${installmentAmount}" required>
            </div>
            <div class="col-3">
              <label for="date">Data</label>
              <input type="date" name="order[order_payments_attributes][${index}][date]" class="form-control" value="${formattedDate}">
            </div>
            <div class="col-3">
              <label for="note">Observação</label>
              <input type="text" name="order[order_payments_attributes][${index}][note]" class="form-control">
            </div>
            <div class="col-1">
              <button type="button" class="btn btn-danger remove-order-payment" style="margin-top: 2rem !important;"><i class="fa fa-trash"></i></button>
            </div>
          </div>
        `;
        orderPaymentsContainer.appendChild(newField);
      });
    }

    function getPaymentTypesOptions() {
      return `<% @payment_types.each do |t| %>
                <option value="<%= t.id %>"><%= "#{t.payment_method} - #{t.payment_channel}" %></option>
              <% end %>`;
    }

    paymentInstallmentsField.addEventListener('input', updateOrderPayments);

    document.addEventListener('click', function(event) {
      if (event.target.classList.contains('remove-order-payment')) {
        event.target.closest('.nested-fields').remove();
        updateOrderPayments(); // Atualiza as parcelas ao remover
      }
    });
  });
</script>


<script>
  document.addEventListener('DOMContentLoaded', function() {
    function calculateTotal() {
      let total = 0;

      document.querySelectorAll('.nested-fields').forEach(function(container) {
        const quantidadeInput = container.querySelector('.quantidade');
        const produtoSelect = container.querySelector('.product-select');

        if (quantidadeInput && produtoSelect) {
          const quantidade = parseFloat(quantidadeInput.value) || 0;
          const preco = parseFloat(produtoSelect.selectedOptions[0]?.dataset.price) || 0;

          total += quantidade * preco;
        }
      });

      const totalOrderElement = document.getElementById('total_order');
      if (totalOrderElement) {
        totalOrderElement.textContent = total.toFixed(2);
      }
    }

    document.addEventListener('change', function(event) {
      if (event.target.matches('.product-select') || event.target.matches('.quantidade')) {
        calculateTotal();
      }
    });

    document.addEventListener('input', function(event) {
      if (event.target.matches('.quantidade')) {
        calculateTotal();
      }
    });

    document.addEventListener('click', function(event) {
      if (event.target.closest('.remove_fields')) {
        setTimeout(calculateTotal, 0);
      }
    });

    document.addEventListener('cocoon:after-insert', function() {
      calculateTotal();
    });

    calculateTotal();
  });
</script>